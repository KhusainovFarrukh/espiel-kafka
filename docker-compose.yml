version: '3.8'

services:
  # Zookeeper
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.9.1
    ports:
      - 5181:2181
    networks:
      - espiel-kafka

  # Kafka
  kafka:
    container_name: kafka
    image: bitnami/kafka:3.6.1
    depends_on:
      - zookeeper
    ports:
      - 5092:5092
      - 5093:5093
    environment:
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:5093,EXTERNAL://:5092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:5093,EXTERNAL://localhost:5092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:SASL_PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_CFG_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_INTER_BROKER_USER: admin
      KAFKA_INTER_BROKER_PASSWORD: admin_psw
      KAFKA_CLIENT_USERS: admin,espiel_customer_service,espiel_order_service
      KAFKA_CLIENT_PASSWORDS: admin_psw,customer_service_psw,order_service_psw
      KAFKA_CFG_SUPER_USERS: User:admin
    networks:
      - espiel-kafka

  # UI for Kafka
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - 9090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: espiel-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:5093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - espiel-kafka

  # PostgreSQL database for customer-service
  customer-service-db:
    container_name: customer-service-db
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: customer_service_db
    ports:
      - 5434:5432
    networks:
      - espiel-kafka

  # PostgreSQL database for order-service
  order-service-db:
    container_name: order-service-db
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: order_service_db
    ports:
      - 5435:5432
    networks:
      - espiel-kafka

  # Customer microservice (Spring Boot application)
  customer-service:
    container_name: customer-service
    depends_on:
      - customer-service-db
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    ports:
      - 5001:5001
    environment:
      DB_IP: customer-service-db
      DB_PORT: 5432
      DB_NAME: customer_service_db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DRIVER: org.postgresql.Driver
    networks:
      - espiel-kafka

  # Order microservice (Spring Boot application)
  order-service:
    container_name: order-service
    depends_on:
      - order-service-db
      - kafka
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - 5002:5002
    environment:
      DB_IP: order-service-db
      DB_PORT: 5432
      DB_NAME: order_service_db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DRIVER: org.postgresql.Driver
      KAFKA_IP: kafka
      KAFKA_PORT: 5093
    networks:
      - espiel-kafka

networks:
  espiel-kafka: